<?php
/**
* This module contains custom functionality for sites that I run.
* 
* @todo List specific features here. :-)
*
* @author Douglas Muth <http://www.claws-and-paws.com/>
*/


/**
* Our init hook.
*/
function ddt_init() {

	//
	// Various debugging statements for testing.
	//
	//print "In ddt_init()"; // Debugging
	//ddt_log("test: !time", array("!time" =>  time()));
	//ddt_log("test: !time", array("!time" =>  time()), WATCHDOG_WARNING);
	//ddt_log("test: !time", array("!time" =>  time()), WATCHDOG_ERROR, l("TEST", "http://test"));

} // End of ddt_init()


/**
* Log when this module is enabled.
*/
function ddt_enable() {
	ddt_log("DDT Module enabled");
}


/**
* Log when this module is disabled.
*/
function ddt_disable() {
	ddt_log("DDT Module disabled");
}


/**
* This function is called whenever a node is created, changed, etc.
*/
function ddt_nodeapi($node, $op) {

	print_r($node); // Debugging

	//
	// We only care about changes to the post
	//
	if ($op != "delete" && $op != "delete revision"
		&& $op != "insert" && $op != "update") {
		return(null);
	}

/*
TEST/TODO:
node->moderate
node->promote
node->comment

*/

	$message = "Op: %op on NID %nid (%topic).";
	$variables = array();
	$variables["%nid"] = $node->nid;
	$variables["%op"] = $op;
	$variables["%topic"] = $node->title;
	$link = l("view", "node/" . $node->nid);

	ddt_log($message, $variables, "", $link);

} // End of hook_nodeapi()


/*

Other things to hook:
	- publish/unpublish
		- hook_nodeapi()
		- hook_comment()
	- block/unblock user
		- hook_user()
	- promote/demote node
		- hook_nodeapi()
	- flag
	- enable/disable another module
	- send private message
	- Dump the variables table and compare during cron?
		- Where to store it?
		- cache_ddt table? :-)

*/



/**
* Our wrapper for watchdog()
*
* @param string $message The message, which will be passed to t().
*	For substitution, using !string is probably the way to go.
*
* @param array $variables Array of variable substituions for t().
*
* @param string $severity Valid values are WATCHDOG_NOTICE, 
*	WATCHDOG_WARNING, and WATCHDOG_ERROR.
*
* @return void
*
*/
function ddt_log($message, $variables = array(), 
	$severity = WATCHDOG_NOTICE, $url = "") {

	if ($severity == "") {
		$severity = WATCHDOG_NOTICE;
	}

	watchdog("ddt", $message, $variables, $severity, $url);

} // End of ddt_log()

